import torch
X = torch.arange(4.0)
W = torch.tensor([5., 2., 0., 1.])
Y = torch.tensor(2.3)
X.requires_grad_(True)
# W.requires_grad_(True)
# Y.requires_grad_(True)
print('x:', X)
print('w:', W)
print('y:', Y)
z = torch.pow((torch.dot(X, W) - Y), 2)
z.backward()
print('实验一')
print('@a:', torch.dot(X, W))
print('!!X.grad:', X.grad)
# print('!!W.grad:', W.grad)
# print('!!Y.grad:', Y.grad)
print('实验二')
X.grad.zero_()
U = torch.dot(X, X)
z = torch.sum(U * X)
z.backward()
print('!!X.grad:', X.grad)
X.grad.zero_()
U = torch.dot(X, X)
z = torch.sum(U.detach() * X)
z.backward()
print('!!X.grad:', X.grad)


